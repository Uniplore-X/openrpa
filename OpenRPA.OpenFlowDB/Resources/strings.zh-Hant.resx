<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="activity_assignopenflow" xml:space="preserve">
    <value>分配OpenFlow</value>
  </data>
	<data name="activity_assignopenflow_tooltip" xml:space="preserve">
    <value>將OpenFlow工作流程分配給用戶或角色</value>
  </data>
	<data name="activity_click_to_view" xml:space="preserve">
    <value>雙擊查看</value>
  </data>
	<data name="activity_deletefile" xml:space="preserve">
    <value>刪除文件</value>
  </data>
	<data name="activity_deletefile_tooltip" xml:space="preserve">
    <value>從OpenFlow資料庫中刪除文件</value>
  </data>
	<data name="activity_deleteone" xml:space="preserve">
    <value>刪除一條</value>
  </data>
	<data name="activity_deleteone_tooltip" xml:space="preserve">
    <value>從OpenFlow資料庫中刪除一條</value>
  </data>
	<data name="activity_filename" xml:space="preserve">
    <value>檔案名</value>
  </data>
	<data name="activity_filename_hint" xml:space="preserve">
    <value>檔案名</value>
  </data>
	<data name="activity_getcredentials" xml:space="preserve">
    <value>獲取證書</value>
  </data>
	<data name="activity_getcredentials_tooltip" xml:space="preserve">
    <value>從OpenFlow獲取一組加密的證書</value>
  </data>
	<data name="activity_getfile" xml:space="preserve">
    <value>獲得文件</value>
  </data>
	<data name="activity_getfile_tooltip" xml:space="preserve">
    <value>下載保存在OpenFlow資料庫中的文件</value>
  </data>
	<data name="activity_grantpermission" xml:space="preserve">
    <value>賦予權限</value>
  </data>
	<data name="activity_grantpermission_tooltip" xml:space="preserve">
    <value>添加或更新對指定對象的用戶或角色的權限，之後必須在OpenFlow中更新文件</value>
  </data>
	<data name="activity_insertone" xml:space="preserve">
    <value>新增一條</value>
  </data>
	<data name="activity_insertone_tooltip" xml:space="preserve">
    <value>在OpenFlow資料庫中新增一條</value>
  </data>
	<data name="activity_insertorupdateone" xml:space="preserve">
    <value>新增或修改一條</value>
  </data>
	<data name="activity_insertorupdateone_tooltip" xml:space="preserve">
    <value>將一項新增OpenFlow資料庫，如果已經存在則進行更新。 除非您指定唯一性，否則檢查_id，它將根據唯一性中提到的欄位查找現有項</value>
  </data>
	<data name="activity_local_path" xml:space="preserve">
    <value>當前路徑</value>
  </data>
	<data name="activity_local_path_hint" xml:space="preserve">
    <value>保存文件到這個路徑</value>
  </data>
	<data name="activity_perm_delete" xml:space="preserve">
    <value>刪除</value>
  </data>
	<data name="activity_perm_read" xml:space="preserve">
    <value>讀取</value>
  </data>
	<data name="activity_perm_update" xml:space="preserve">
    <value>更新</value>
  </data>
	<data name="activity_query" xml:space="preserve">
    <value>查詢</value>
  </data>
	<data name="activity_query_tooltip" xml:space="preserve">
    <value>在OpenFlow資料庫中查詢資料</value>
  </data>
	<data name="activity_removepermission" xml:space="preserve">
    <value>刪除權限</value>
  </data>
	<data name="activity_removepermission_tooltip" xml:space="preserve">
    <value>從指定對象的用戶或角色中刪除權限，則必須在OpenFlow之後更新文件</value>
  </data>
	<data name="activity_savefile" xml:space="preserve">
    <value>保存文件</value>
  </data>
	<data name="activity_savefile_filename" xml:space="preserve">
    <value>檔案名</value>
  </data>
	<data name="activity_savefile_filename_help" xml:space="preserve">
    <value>要上傳文件的完整路徑和檔案名</value>
  </data>
	<data name="activity_savefile_path" xml:space="preserve">
    <value>路徑</value>
  </data>
	<data name="activity_savefile_path_help" xml:space="preserve">
    <value>將文件保存在伺服器上的此子文件夾中，再次獲取文件時具有相關性</value>
  </data>
	<data name="activity_savefile_result" xml:space="preserve">
    <value>結果</value>
  </data>
	<data name="activity_savefile_result_help" xml:space="preserve">
    <value>返回新上傳文件的ID</value>
  </data>
	<data name="activity_savefile_tooltip" xml:space="preserve">
    <value>上傳文件並將其保存到OpenFlow資料庫中</value>
  </data>
	<data name="activity_setcredentials" xml:space="preserve">
    <value>設置證書</value>
  </data>
	<data name="activity_setcredentials_tooltip" xml:space="preserve">
    <value>在OpenFlow中創建或更新一組加密的證書</value>
  </data>
	<data name="activity_updatefromdataTable" xml:space="preserve">
    <value>從資料表更新</value>
  </data>
	<data name="activity_updatefromdataTable_tooltip" xml:space="preserve">
    <value>將對DataTable所做的更改提交回OpenFlow，返回新增和更新的行的列表</value>
  </data>
	<data name="activity_waitforcompleted" xml:space="preserve">
    <value>等待直到結束</value>
  </data>
	<data name="activity_waitforcompleted_help" xml:space="preserve">
    <value>等待完成，然後繼續工作流程</value>
  </data>
</root>